import java.util.*

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    `java-library`
    `maven-publish`
    `jvm-test-suite`
    signing
    id("com.benjaminsproule.license")
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }

    maven {
        url = uri("https://maven.restlet.talend.com")
    }
}

group = "de.brendamour"
version = "0.4.0-SNAPSHOT"
extra["isReleaseVersion"] = !version.toString().endsWith("SNAPSHOT")

java {
    sourceCompatibility = JavaVersion.VERSION_11
}

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

signing {
    val signingKey: String? by project
    val signingPassword: String? by project
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign(publishing.publications["maven"])
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}

tasks.register<Wrapper>("wrapper") {
    gradleVersion = "8.5"
}
tasks.register("prepareKotlinBuildScriptModel"){}

license {
    header  = project.file("header.txt")
    skipExistingHeaders = true
    ext.set("year", Calendar.getInstance().get(Calendar.YEAR))
    ext.set("owner", "Patrice Brend'amour")
    ext.set("email", "patrice@brendamour.net")
    excludes(arrayListOf("*pom.xml","*.checkstyle","**/*.cer","**/*.pem","**/*.p12","**/*.ignored_file","site/*","**/*.json","**/*.png"))
}