import org.gradle.tooling.GradleConnector

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id("de.brendamour.java-conventions")
    id("net.researchgate.release")
}

dependencies {
    api(libs.com.fasterxml.jackson.core.jackson.databind)
    api(libs.com.fasterxml.jackson.datatype.jackson.datatype.jsr310)
    api(libs.com.google.guava.guava)
    api(libs.com.eatthepath.pushy)
    api(libs.commons.codec.commons.codec)
    api(libs.commons.io.commons.io)
    api(libs.org.apache.commons.commons.lang3)
    api(libs.org.bouncycastle.bcpkix.jdk18on)
    api(libs.org.slf4j.slf4j.api)
    testImplementation(libs.org.apache.logging.log4j.log4j.slf4j.impl)
    testImplementation(libs.org.assertj.assertj.core)
    testImplementation(libs.org.mockito.mockito.core)
    testImplementation(libs.org.testng.testng)
    implementation(libs.net.researchgate.release)
}

description = "jPasskit"

java {
    withJavadocJar()
}

tasks.named<Test>("test") {
    useTestNG()
}

// Workaround for https://github.com/researchgate/gradle-release/issues/184
configure(listOf(tasks.release, tasks.runBuildTasks)) {
    configure {
        actions.clear()
        doLast {
            GradleConnector
                    .newConnector()
                    .forProjectDirectory(layout.projectDirectory.asFile)
                    .connect()
                    .use { projectConnection ->
                        val buildLauncher = projectConnection
                                .newBuild()
                                .forTasks(*tasks.toTypedArray())
                                .setStandardInput(System.`in`)
                                .setStandardOutput(System.out)
                                .setStandardError(System.err)
                        gradle.startParameter.excludedTaskNames.forEach {
                            buildLauncher.addArguments("-x", it)
                        }
                        buildLauncher.run()
                    }
        }
    }
}